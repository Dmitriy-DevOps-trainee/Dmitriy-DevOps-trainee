Task 1

1.
Создать локальный репозиторий "git-lesson"
[dima@localhost git-lesson]$ git init
 Initialized empty Git repository in /home/dima/git-lesson/.git/

2.
Создать пустой файл README.md и закоммитить изменения.
[dima@localhost git-lesson]$ touch README.md
[dima@localhost git-lesson]$ git add README.md
[dima@localhost git-lesson]$ git commit -m 'Add README.md'
[master (root-commit) d499268] Add README.md
 Committer: Dima <dima@localhost.localdomain>
...
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 README.md

3.
Создать дополнительную ветку "feat1-add-readme", добавить в файл README.md немного текста. Изменения закоммитить.
[dima@localhost git-lesson]$ git branch feat1-add-readme
[dima@localhost git-lesson]$ git branch
  feat1-add-readme
* master

[dima@localhost git-lesson]$ git checkout feat1-add-readme
 Switched to branch 'feat1-add-readme'

[dima@localhost git-lesson]$ git add README.md
[dima@localhost git-lesson]$ git commit -m 'Add branch, add text to README'
[master ca0db32] Add branch, add text to README
...
1 file changed, 1 insertion(+)

4.
Переключиться обратно на "master" ветку и так же добавить в README.md немного другого текста
[dima@localhost git-lesson]$ git checkout master
 Switched to branch 'master'
[dima@localhost git-lesson]$ sudo nano README.md

5.
Смержить изменения из "feat1-add-readme" в "master" ветку так, чтобы сохранились изменения только из "feat1-add-readme" ветки
[dima@localhost git-lesson]$ git merge feat1-add-readme
 Auto-merging README.md
 CONFLICT (content): Merge conflict in README.md
 Automatic merge failed; fix conflicts and then commit the result.

[dima@localhost git-lesson]$ cat README.md
 <<<<<<< HEAD
 Some text on master branch file
 =======
 Text on branch file
 >>>>>>> feat1-add-readme

[dima@localhost git-lesson]$ git checkout --their README.md
[dima@localhost git-lesson]$ git add README.md
[dima@localhost git-lesson]$ git commit -m 'merge'
[master 61c323c] merge

[dima@localhost git-lesson]$ git checkout master
 Already on 'master'
[dima@localhost git-lesson]$ cat README.md
 Text on branch file
[dima@localhost git-lesson]$ git checkout feat1-add-readme
 Switched to branch 'feat1-add-readme'
[dima@localhost git-lesson]$ cat README.md
 Text on branch file

6.
Переключиться обратно на "feat1-add-readme" ветку, создать файл temp_file и закоммитить изменения
[dima@localhost git-lesson]$ touch temp_file
[dima@localhost git-lesson]$ git add temp_file
[dima@localhost git-lesson]$ git commit -m 'Create temp_file'
[feat1-add-readme 89b8b3c] Create temp_file
 Committer: Dima <dima@localhost.localdomain>
...
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 temp_file

7.
Отменить изменения, вносимые первым коммитом ветки "feat1-add-readme"
[dima@localhost git-lesson]$ git log
commit 89b8b3c2176f83e2ac66232fc2f61eb4ed7726b7
Author: Dima <dima@localhost.localdomain>
Date:   Wed Mar 30 17:15:17 2022 +0300

    Create temp_file

commit a8c15f6076c8255e738bc73164a142626e07e64f
Author: Dima <dima@localhost.localdomain>
Date:   Wed Mar 30 14:55:49 2022 +0300

    Add branch, add text to README

commit f5f9230724f03f7a76371870269c0c020aedbef6
Author: Dima <dima@localhost.localdomain>
Date:   Wed Mar 30 13:58:49 2022 +0300

    Новый комментарий

[dima@localhost git-lesson]$ git reset --hard a8c15f6076c8255e738bc73164a142626e  





Task 2

1.
Создать пустой репозиторий в GitHub "git-lesson".
# GitHub repo created

2.
Сделать этот репозиторий удаленным для локального репозитория из первой задачи
[dima@localhost git-lesson]$ git remote add git-lesson https://github.com/Dmitriy-DevOps-trainee/git-lesson.git
[dima@localhost git-lesson]$ git remote show git-lesson
* remote git-lesson
  Fetch URL: https://github.com/Dmitriy-DevOps-trainee/git-lesson.git
  Push  URL: https://github.com/Dmitriy-DevOps-trainee/git-lesson.git
  HEAD branch: (unknown)

3.
Отправить изменения из всех веток в "git-lesson" репозиторий
[dima@localhost git-lesson]$ git push --all git-lesson
Username for 'https://github.com': Dmitriy-DevOps-trainee
Password for 'https://Dmitriy-DevOps-trainee@github.com':
Counting objects: 10, done.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (10/10), 789 bytes | 0 bytes/s, done.
Total 10 (delta 2), reused 0 (delta 0)
remote: Resolving deltas: 100% (2/2), done.
To https://github.com/Dmitriy-DevOps-trainee/git-lesson.git
 * [new branch]      feat1-add-readme -> feat1-add-readme
 * [new branch]      master -> master

4.
Заменить содержимое README.md в ветке "feat1-add-readme" строкой "Hello Github", закоммитить и отправить в "git-lesson" репо
[dima@localhost git-lesson]$ git checkout feat1-add-readme
 Switched to branch 'feat1-add-readme'
[dima@localhost git-lesson]$ sudo nano README.md
[dima@localhost git-lesson]$ git add README.md
[dima@localhost git-lesson]$ git commit -m 'Changed text'
[feat1-add-readme 404b36c] Changed text
 Committer: Dima <dima@localhost.localdomain>
...
 1 file changed, 1 insertion(+), 1 deletion(-)

[dima@localhost git-lesson]$ sudo git push git-lesson feat1-add-readme
To https://github.com/Dmitriy-DevOps-trainee/git-lesson.git
   a8c15f6..404b36c  feat1-add-readme -> feat1-add-readme

5.
Сделать Pull-Request из ветки "feat1-add-readme" в "master" и добавить меня (@vauboy) ревьювером
# Done from WEB UI





Task 3.
Запустить Gitlab CE в докере "gitlab/gitlab-ce:latest"
[dima@localhost git-lesson]$ sudo yum install docker
[dima@localhost git-lesson]$ sudo service docker start
[dima@localhost git-lesson]$ sudo docker pull gitlab/gitlab-ce:latest
sudo docker run --detach   
--hostname localhost   
--publish 443:443 
--publish 80:80 
--publish 2289:22   
--name gitlab   
--restart always   
--volume $GITLAB_HOME/config:/etc/gitlab:Z   
--volume $GITLAB_HOME/logs:/var/log/gitlab:Z   
--volume $GITLAB_HOME/data:/var/opt/gitlab:Z   
--shm-size 256m   
gitlab/gitlab-ce:latest

sudo docker exec -it gitlab grep 'Password:' /etc/gitlab/initial_root_password

[dima@localhost gitlab]$ sudo docker ps -a
CONTAINER ID        IMAGE                     COMMAND             CREATED             STATUS                   PORTS                                                            NAMES
621a8021dbfe        gitlab/gitlab-ce:latest   "/assets/wrapper"   5 minutes ago       Up 5 minutes (healthy)   0.0.0.0:80->80/tcp, 0.0.0.0:443->443/tcp, 0.0.0.0:2289->22/tcp   gitlab

# Watch Zip file
Необходимо сделать скриншоты на всех последующих этапах и приложить в виде архива
  2. Создать группу "devops-course"
  3. Создать пользователей: developer1 и developer2
  4. Добавить их в группу и назначить следующие пермишены:
        developer1 – maintainer
        developer2 – developer
  5. Создать новый проект
  6. Создать все необходимые для GitFlow ветки в проекте (например main, develop, release-v1, feature1)
  7. Запретить отправку изменений в "main" ветку для всех пользовате. У maintainer должен остаться возможность для слияния изменений из других веток
  8. Защитить релизные ветки с помощью wildcard (например release-*) и разрешить слияние только пользователям с уровнем доступа maintainer
  9. Защитить develop ветку и разрешить создавать Merge Requests всем пользователям.
  10. Разрешить всем вносить любые изменения в "feature-*" ветки

